{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww28300\viewh15000\viewkind0
\deftab720
\pard\pardeftab720\sl320\partightenfactor0

\f0\b\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
Euler Problem #20\
\
Problem description \
\pard\pardeftab720\sl380\partightenfactor0

\b0 \cf2 \cb3 Find the sum of the digits in the number 100!\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\partightenfactor0

\b \cf2 \cb3 Sample output 
\b0 \cf2 \cb3 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb1 \kerning1\expnd0\expndtw0 The sum of the digits in the number 100! is : 648\
Execution time in milliseconds: 2 (This might vary a little for different run)\cf0 \
\
\pard\pardeftab720\partightenfactor0

\b \cf0 Why I chose the problems you did 
\b0 \
This problem deals with really large number. So I tried to solve this problem. \
\

\b A description of the process you followed in solving the problem \

\b0 1. Get the factorial of 100! . Used BigInteger here. \
2. Calculate the total sum of the numbers which are present in 100!\
\

\b What reference sources you used, if any 
\b0 \
https://www.mathsisfun.com/\
https://www.khanacademy.org/\
\
\

\b How much time you spent on the exercise 
\b0 \
30-40 min\
\

\b Runtime Complexity
\b0  \
Optimized O(n)\
\

\b Space Complexity 
\b0 \
O(1)\
\

\b I have considered couple of important points while writing the code
\b0 \
1. Simple and quality code\
2. Maintainable code\
3. Proper error validation\
4. Testable code (added JUnit Test)\
5. Execution time \
6. Proper comments \
7. Optimization\
8. Modularization\
\

\b These source files are included 
\b0 \
- FactorialSum.java\
- TestFactorialSum.java(JUnit)\
\

\b Instruction to run these program
\b0 \
You can simply import these two files into any IDE(e.g. eclipse) and run (assuming you have the right Junit jar present to run the TestFactorialSum.java file)}